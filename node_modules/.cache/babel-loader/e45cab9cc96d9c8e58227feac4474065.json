{"ast":null,"code":"import _toConsumableArray from \"/home/nhi/react Images/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/nhi/react Images/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/nhi/react Images/src/components/Images.js\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { classicNameResolver } from \"typescript\";\nimport classes from './Images.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Images = function Images() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  console.log(images);\n  useEffect(function () {\n    fetch('https://images-4bdb1-default-rtdb.asia-southeast1.firebasedatabase.app/images.json').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var imagesList = [];\n\n      for (var key in data) {\n        imagesList.push({\n          id: key,\n          url: data[key].url\n        });\n      }\n\n      setImages(imagesList);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  var canvas = useRef();\n  var currentBox = null;\n  var image = new Image();\n  image.src = props.imageUrl;\n  image.width = '700';\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      boxes = _useState4[0],\n      setBoxes = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newDraw = _useState6[0],\n      _setNewDraw = _useState6[1];\n\n  var _useState7 = useState({\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      coordinate = _useState8[0],\n      setCoordinate = _useState8[1];\n\n  var drawBox = function drawBox(ctx, box) {\n    var x = box.x,\n        y = box.y,\n        w = box.w,\n        h = box.h;\n    ctx.beginPath();\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 1;\n    ctx.rect(x, y, w, h);\n    ctx.stroke();\n    ctx.strokeText(x, x, y);\n  };\n\n  var handleMouseDown = function handleMouseDown(e) {\n    var x = parseInt(e.nativeEvent.offsetX - canvas.current.clientLeft);\n    var y = parseInt(e.nativeEvent.offsetY - canvas.current.clientTop);\n    currentBox = {\n      x: x,\n      y: y,\n      w: 30,\n      h: 30\n    };\n    drawBoxes();\n  };\n\n  var handleMouseUp = function handleMouseUp(e) {\n    if (currentBox !== null) {\n      setBoxes([].concat(_toConsumableArray(boxes), [currentBox]));\n      setCoordinate(currentBox);\n\n      _setNewDraw(true);\n\n      currentBox = null;\n    }\n\n    drawBoxes();\n  };\n\n  var handleMouseOut = function handleMouseOut(e) {\n    currentBox = null;\n    drawBoxes();\n  };\n\n  var handleMouseMove = function handleMouseMove(e) {\n    _s();\n\n    if (currentBox !== null) {\n      var _currentBox = currentBox,\n          x = _currentBox.x,\n          y = _currentBox.y,\n          w = _currentBox.w,\n          h = _currentBox.h;\n      var mouseX = parseInt(e.nativeEvent.offsetX - canvas.current.clientLeft);\n      var mouseY = parseInt(e.nativeEvent.offsetY - canvas.current.clientTop);\n      currentBox = {\n        x: x,\n        y: y,\n        w: mouseX - x,\n        h: mouseY - y\n      };\n      drawBoxes();\n    } // initialize the canvas context\n\n\n    useEffect(function () {// dynamically assign the width and height to canvas\n    }, []);\n    useEffect(function () {\n      drawBoxes();\n    }, [boxes]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.page,\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        onMouseDown: handleMouseDown,\n        onMouseUp: handleMouseUp,\n        onMouseOut: handleMouseOut,\n        onMouseMove: handleMouseMove,\n        ref: canvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, _this), newDraw && /*#__PURE__*/_jsxDEV(BoxForm, {\n        setNewDraw: function setNewDraw() {\n          return _setNewDraw(false);\n        },\n        coordinate: coordinate,\n        url: props.imageUrl,\n        id: props.imageKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 27\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, _this);\n  };\n\n  _s(handleMouseMove, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.images,\n    children: images.map(function (image) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.url,\n        alt: \"image\",\n        width: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, _this);\n};\n\n_s2(Images, \"cuEpMY50cXeN22qC9rTwd9DU61U=\");\n\n_c = Images;\nexport default Images;\n\nvar _c;\n\n$RefreshReg$(_c, \"Images\");","map":{"version":3,"sources":["/home/nhi/react Images/src/components/Images.js"],"names":["useEffect","useState","getDatabase","ref","onValue","classicNameResolver","classes","Images","images","setImages","console","log","fetch","then","res","json","data","imagesList","key","push","id","url","catch","err","canvas","useRef","currentBox","image","Image","src","props","imageUrl","width","boxes","setBoxes","newDraw","setNewDraw","x","y","w","h","coordinate","setCoordinate","drawBox","ctx","box","beginPath","strokeStyle","lineWidth","rect","stroke","strokeText","handleMouseDown","e","parseInt","nativeEvent","offsetX","current","clientLeft","offsetY","clientTop","drawBoxes","handleMouseUp","handleMouseOut","handleMouseMove","mouseX","mouseY","page","imageKey","map"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,OAA3B,QAAyC,mBAAzC;AACA,SAASC,mBAAT,QAAoC,YAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA;;AACjB,kBAA4BN,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOO,MAAP;AAAA,MAAeC,SAAf;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,KAAK,CAAC,oFAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADT,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AACV,UAAMC,UAAU,GAAG,EAAnB;;AACA,WAAK,IAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACpBC,QAAAA,UAAU,CAACE,IAAX,CAAgB;AACdC,UAAAA,EAAE,EAAEF,GADU;AAEdG,UAAAA,GAAG,EAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG;AAFD,SAAhB;AAID;;AACHZ,MAAAA,SAAS,CAACQ,UAAD,CAAT;AACH,KAXD,EAWGK,KAXH,CAWS,UAAAC,GAAG;AAAA,aAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAAJ;AAAA,KAXZ;AAYH,GAbQ,EAaN,EAbM,CAAT;AAeI,MAAMC,MAAM,GAAGC,MAAM,EAArB;AACA,MAAIC,UAAU,GAAI,IAAlB;AACA,MAAIC,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACAD,EAAAA,KAAK,CAACE,GAAN,GAAYC,KAAK,CAACC,QAAlB;AACAJ,EAAAA,KAAK,CAACK,KAAN,GAAc,KAAd;;AACA,mBAA0B/B,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOgC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8BjC,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOkC,OAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAAoCnC,QAAQ,CAAC;AAACoC,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAE,CAAV;AAAaC,IAAAA,CAAC,EAAE,CAAhB;AAAmBC,IAAAA,CAAC,EAAE;AAAtB,GAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B,QAAQR,CAAR,GAAuBQ,GAAvB,CAAQR,CAAR;AAAA,QAAWC,CAAX,GAAuBO,GAAvB,CAAWP,CAAX;AAAA,QAAcC,CAAd,GAAuBM,GAAvB,CAAcN,CAAd;AAAA,QAAiBC,CAAjB,GAAuBK,GAAvB,CAAiBL,CAAjB;AACAI,IAAAA,GAAG,CAACE,SAAJ;AACAF,IAAAA,GAAG,CAACG,WAAJ,GAAkB,MAAlB;AACAH,IAAAA,GAAG,CAACI,SAAJ,GAAgB,CAAhB;AACAJ,IAAAA,GAAG,CAACK,IAAJ,CAASZ,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB;AACAI,IAAAA,GAAG,CAACM,MAAJ;AACAN,IAAAA,GAAG,CAACO,UAAJ,CAAed,CAAf,EAAkBA,CAAlB,EAAqBC,CAArB;AACD,GARD;;AAUA,MAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,CAAC,EAAI;AAC3B,QAAMhB,CAAC,GAAGiB,QAAQ,CAACD,CAAC,CAACE,WAAF,CAAcC,OAAd,GAAwBhC,MAAM,CAACiC,OAAP,CAAeC,UAAxC,CAAlB;AACA,QAAMpB,CAAC,GAAGgB,QAAQ,CAACD,CAAC,CAACE,WAAF,CAAcI,OAAd,GAAwBnC,MAAM,CAACiC,OAAP,CAAeG,SAAxC,CAAlB;AACAlC,IAAAA,UAAU,GAAG;AAACW,MAAAA,CAAC,EAADA,CAAD;AAAIC,MAAAA,CAAC,EAADA,CAAJ;AAAOC,MAAAA,CAAC,EAAE,EAAV;AAAcC,MAAAA,CAAC,EAAE;AAAjB,KAAb;AACAqB,IAAAA,SAAS;AACV,GALD;;AAOA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAT,CAAC,EAAI;AACzB,QAAI3B,UAAU,KAAK,IAAnB,EAAyB;AACvBQ,MAAAA,QAAQ,8BAAKD,KAAL,IAAYP,UAAZ,GAAR;AACAgB,MAAAA,aAAa,CAAChB,UAAD,CAAb;;AACAU,MAAAA,WAAU,CAAC,IAAD,CAAV;;AACAV,MAAAA,UAAU,GAAG,IAAb;AACD;;AACDmC,IAAAA,SAAS;AACV,GARD;;AAUA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAV,CAAC,EAAI;AAC1B3B,IAAAA,UAAU,GAAG,IAAb;AACAmC,IAAAA,SAAS;AACV,GAHD;;AAKA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAX,CAAC,EAAI;AAAA;;AAC3B,QAAI3B,UAAU,KAAK,IAAnB,EAAyB;AACvB,wBAAuBA,UAAvB;AAAA,UAAQW,CAAR,eAAQA,CAAR;AAAA,UAAWC,CAAX,eAAWA,CAAX;AAAA,UAAcC,CAAd,eAAcA,CAAd;AAAA,UAAiBC,CAAjB,eAAiBA,CAAjB;AACA,UAAMyB,MAAM,GAAGX,QAAQ,CAACD,CAAC,CAACE,WAAF,CAAcC,OAAd,GAAwBhC,MAAM,CAACiC,OAAP,CAAeC,UAAxC,CAAvB;AACA,UAAMQ,MAAM,GAAGZ,QAAQ,CAACD,CAAC,CAACE,WAAF,CAAcI,OAAd,GAAwBnC,MAAM,CAACiC,OAAP,CAAeG,SAAxC,CAAvB;AACAlC,MAAAA,UAAU,GAAG;AAACW,QAAAA,CAAC,EAADA,CAAD;AAAIC,QAAAA,CAAC,EAADA,CAAJ;AAAOC,QAAAA,CAAC,EAAE0B,MAAM,GAAG5B,CAAnB;AAAsBG,QAAAA,CAAC,EAAE0B,MAAM,GAAG5B;AAAlC,OAAb;AACAuB,MAAAA,SAAS;AACV,KAP0B,CAW7B;;;AACA7D,IAAAA,SAAS,CAAC,YAAM,CACd;AACD,KAFQ,EAEN,EAFM,CAAT;AAIAA,IAAAA,SAAS,CAAC,YAAM;AACd6D,MAAAA,SAAS;AACV,KAFQ,EAEN,CAAC5B,KAAD,CAFM,CAAT;AAIA,wBACI;AAAK,MAAA,SAAS,EAAE3B,OAAO,CAAC6D,IAAxB;AAAA,8BACE;AACE,QAAA,WAAW,EAAEf,eADf;AAEE,QAAA,SAAS,EAAEU,aAFb;AAGE,QAAA,UAAU,EAAEC,cAHd;AAIE,QAAA,WAAW,EAAEC,eAJf;AAKE,QAAA,GAAG,EAAExC;AALP;AAAA;AAAA;AAAA;AAAA,eADF,EAQGW,OAAO,iBAAI,QAAC,OAAD;AACV,QAAA,UAAU,EAAE;AAAA,iBAAMC,WAAU,CAAC,KAAD,CAAhB;AAAA,SADF;AAEV,QAAA,UAAU,EAAEK,UAFF;AAGV,QAAA,GAAG,EAAEX,KAAK,CAACC,QAHD;AAIV,QAAA,EAAE,EAAED,KAAK,CAACsC;AAJA;AAAA;AAAA;AAAA;AAAA,eARd;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAiBD,GArCC;;AA5Da,KA4DPJ,eA5DO;;AAmGjB,sBACI;AAAK,IAAA,SAAS,EAAE1D,OAAO,CAACE,MAAxB;AAAA,cACMA,MAAM,CAAC6D,GAAP,CAAW,UAAC1C,KAAD;AAAA,0BAAW;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACN,GAAhB;AAAqB,QAAA,GAAG,EAAC,OAAzB;AAAiC,QAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,eAAX;AAAA,KAAX;AADN;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAxGD;;IAAMd,M;;KAAAA,M;AA0GN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getDatabase, ref, onValue} from \"firebase/database\";\nimport { classicNameResolver } from \"typescript\";\nimport classes from './Images.module.css';\n\nconst Images = () => {\n    const [images, setImages] = useState([]);\n    console.log(images);\n\n    useEffect(() => {\n        fetch('https://images-4bdb1-default-rtdb.asia-southeast1.firebasedatabase.app/images.json')\n        .then(res => res.json())\n        .then(data => {\n            const imagesList = [];\n            for (const key in data) {\n                imagesList.push({\n                  id: key,\n                  url: data[key].url,\n                })\n              }\n            setImages(imagesList);\n        }).catch(err => console.log(err))\n    }, [])\n\n        const canvas = useRef();\n        let currentBox =  null; \n        let image = new Image();\n        image.src = props.imageUrl;\n        image.width = '700';\n        const [boxes, setBoxes] = useState([]);\n        const [newDraw, setNewDraw] = useState(false);\n        const [coordinate, setCoordinate] = useState({x: 0, y: 0, w: 0, h: 0});\n        \n        const drawBox = (ctx, box) => {\n          const { x, y, w, h } = box;\n          ctx.beginPath();\n          ctx.strokeStyle = 'blue';\n          ctx.lineWidth = 1;\n          ctx.rect(x, y, w, h);\n          ctx.stroke();\n          ctx.strokeText(x, x, y);\n        }\n      \n        const handleMouseDown = e => {\n          const x = parseInt(e.nativeEvent.offsetX - canvas.current.clientLeft);\n          const y = parseInt(e.nativeEvent.offsetY - canvas.current.clientTop);\n          currentBox = {x, y, w: 30, h: 30};\n          drawBoxes();\n        }  \n      \n        const handleMouseUp = e => {\n          if (currentBox !== null) {\n            setBoxes([...boxes, currentBox]);\n            setCoordinate(currentBox);\n            setNewDraw(true);\n            currentBox = null;\n          }\n          drawBoxes();\n        }  \n      \n        const handleMouseOut = e => {\n          currentBox = null\n          drawBoxes();\n        }\n      \n        const handleMouseMove = e => {\n          if (currentBox !== null) {\n            const { x, y, w, h } = currentBox;\n            const mouseX = parseInt(e.nativeEvent.offsetX - canvas.current.clientLeft);\n            const mouseY = parseInt(e.nativeEvent.offsetY - canvas.current.clientTop);\n            currentBox = {x, y, w: mouseX - x, h: mouseY - y};\n            drawBoxes();\n          }\n        \n      \n      \n        // initialize the canvas context\n        useEffect(() => {\n          // dynamically assign the width and height to canvas\n        }, []);\n      \n        useEffect(() => {   \n          drawBoxes();\n        }, [boxes]);\n      \n        return (\n            <div className={classes.page}>\n              <canvas \n                onMouseDown={handleMouseDown} \n                onMouseUp={handleMouseUp}\n                onMouseOut={handleMouseOut}\n                onMouseMove={handleMouseMove}\n                ref={canvas}>    \n              </canvas>\n              {newDraw && <BoxForm \n                setNewDraw={() => setNewDraw(false)}\n                coordinate={coordinate}\n                url={props.imageUrl}\n                id={props.imageKey}\n                />}\n            </div>\n            );\n      }\n      \n    return(\n        <div className={classes.images}>\n            { images.map((image) => <img src={image.url} alt=\"image\" width='300'/>) }\n        </div>\n    )\n};\n\nexport default Images"]},"metadata":{},"sourceType":"module"}