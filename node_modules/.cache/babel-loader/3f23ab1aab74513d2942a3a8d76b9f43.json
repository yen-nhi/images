{"ast":null,"code":"import _objectSpread from \"/home/nhi/react Images/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/nhi/react Images/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/nhi/react Images/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Canvas from \"./components/Canvas\";\nimport classes from './App.module.css';\nimport { useState } from 'react';\nimport { storage } from './firebase/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var allInputs = {\n    imgUrl: ''\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageAsFile = _useState2[0],\n      setImageAsFile = _useState2[1];\n\n  var _useState3 = useState(allInputs),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imageAsUrl = _useState4[0],\n      setImageAsUrl = _useState4[1];\n\n  var fileChangeHandler = function fileChangeHandler(e) {\n    var image = e.target.files[0];\n    setImageAsFile(function (imageFile) {\n      return image;\n    });\n  };\n\n  var fileUploadHandler = function fileUploadHandler(e) {\n    e.preventDefault(); // async magic goes here...\n\n    if (imageAsFile === '') {\n      console.error(\"not an image\");\n    }\n\n    var uploadTask = storage.ref(\"/images/\".concat(imageAsFile.name)).put(imageAsFile); //initiates the firebase side uploading \n\n    uploadTask.on('state_changed', function (snapShot) {\n      //takes a snap shot of the process as it is happening\n      console.log(snapShot);\n    }, function (err) {\n      //catches the errors\n      console.log(err);\n    }, function () {\n      // gets the functions from storage refences the image storage in firebase by the children\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\n      storage.ref('images').child(imageAsFile.name).getDownloadURL().then(function (fireBaseUrl) {\n        setImageAsUrl(function (prevObject) {\n          return _objectSpread(_objectSpread({}, prevObject), {}, {\n            imgUrl: fireBaseUrl\n          });\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.app,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: fileChangeHandler,\n      className: classes.chooseFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: fileUploadHandler,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageAsUrl.imgUrl,\n      alt: \"image tag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"+dRI+LLv1QitbwUZXPO7P+9pfqE=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nhi/react Images/src/App.js"],"names":["Canvas","classes","useState","storage","App","allInputs","imgUrl","imageAsFile","setImageAsFile","imageAsUrl","setImageAsUrl","fileChangeHandler","e","image","target","files","imageFile","fileUploadHandler","preventDefault","console","error","uploadTask","ref","name","put","on","snapShot","log","err","child","getDownloadURL","then","fireBaseUrl","prevObject","app","chooseFile"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,OAAR,QAAsB,qBAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAMC,SAAS,GAAG;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAlB;;AACA,kBAAsCJ,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOK,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAoCN,QAAQ,CAACG,SAAD,CAA5C;AAAA;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AAED,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAChC,QAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;AACAP,IAAAA,cAAc,CAAC,UAAAQ,SAAS;AAAA,aAAKH,KAAL;AAAA,KAAV,CAAd;AACA,GAHD;;AAKA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACL,CAAD,EAAO;AAC9BA,IAAAA,CAAC,CAACM,cAAF,GAD8B,CAG9B;;AACA,QAAGX,WAAW,KAAK,EAAnB,EAAuB;AACrBY,MAAAA,OAAO,CAACC,KAAR;AACD;;AACD,QAAMC,UAAU,GAAGlB,OAAO,CAACmB,GAAR,mBAAuBf,WAAW,CAACgB,IAAnC,GAA2CC,GAA3C,CAA+CjB,WAA/C,CAAnB,CAP8B,CAQ9B;;AACAc,IAAAA,UAAU,CAACI,EAAX,CAAc,eAAd,EACA,UAACC,QAAD,EAAc;AACZ;AACAP,MAAAA,OAAO,CAACQ,GAAR,CAAYD,QAAZ;AACD,KAJD,EAIG,UAACE,GAAD,EAAS;AACV;AACAT,MAAAA,OAAO,CAACQ,GAAR,CAAYC,GAAZ;AACD,KAPD,EAOG,YAAM;AACP;AACA;AACAzB,MAAAA,OAAO,CAACmB,GAAR,CAAY,QAAZ,EAAsBO,KAAtB,CAA4BtB,WAAW,CAACgB,IAAxC,EAA8CO,cAA9C,GACCC,IADD,CACM,UAAAC,WAAW,EAAI;AACnBtB,QAAAA,aAAa,CAAC,UAAAuB,UAAU;AAAA,iDAASA,UAAT;AAAqB3B,YAAAA,MAAM,EAAE0B;AAA7B;AAAA,SAAX,CAAb;AACD,OAHD;AAID,KAdD;AAeF,GAxBD;;AA2BC,sBACI;AAAK,IAAA,SAAS,EAAE/B,OAAO,CAACiC,GAAxB;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEvB,iBAA7B;AAAgD,MAAA,SAAS,EAAEV,OAAO,CAACkC;AAAnE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAElB,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,GAAG,EAAER,UAAU,CAACH,MAArB;AAA6B,MAAA,GAAG,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD;;GA7CQF,G;;KAAAA,G;AA6CR;AAED,eAAeA,GAAf","sourcesContent":["import Canvas from \"./components/Canvas\";\nimport classes from './App.module.css';\nimport {useState} from 'react';\nimport {storage} from './firebase/firebase';\n\nfunction App() {\n  const allInputs = {imgUrl: ''};\n  const [imageAsFile, setImageAsFile] = useState('');\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n\n const fileChangeHandler = (e) => {\n  const image = e.target.files[0]\n  setImageAsFile(imageFile => (image))\n }\n\n const fileUploadHandler = (e) => {\n    e.preventDefault()\n\n    // async magic goes here...\n    if(imageAsFile === '') {\n      console.error(`not an image`)\n    }\n    const uploadTask = storage.ref(`/images/${imageAsFile.name}`).put(imageAsFile)\n    //initiates the firebase side uploading \n    uploadTask.on('state_changed', \n    (snapShot) => {\n      //takes a snap shot of the process as it is happening\n      console.log(snapShot)\n    }, (err) => {\n      //catches the errors\n      console.log(err)\n    }, () => {\n      // gets the functions from storage refences the image storage in firebase by the children\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\n      storage.ref('images').child(imageAsFile.name).getDownloadURL()\n      .then(fireBaseUrl => {\n        setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n      })\n    })\n };\n\n\n  return(\n      <div className={classes.app}>\n        <input type=\"file\" onChange={fileChangeHandler} className={classes.chooseFile}/>\n        <button type=\"button\" onClick={fileUploadHandler}>Upload Image</button>\n        <img src={imageAsUrl.imgUrl} alt=\"image tag\" />\n        <Canvas/>\n      </div>\n  )\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}