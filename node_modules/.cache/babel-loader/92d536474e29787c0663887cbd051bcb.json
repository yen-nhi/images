{"ast":null,"code":"import _slicedToArray from \"/home/nhi/images/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/nhi/images/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Canvas from \"./components/Canvas\";\nimport Images from \"./components/Images\";\nimport classes from './App.module.css';\nimport React, { useState } from 'react';\nimport { storage } from './firebase/firebase';\nimport { getDownloadURL, uploadBytesResumable, ref } from \"firebase/storage\";\nimport { getDatabase, ref as rtref, push } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imageUrl = _useState4[0],\n      setImageUrl = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imageKey = _useState6[0],\n      setImageKey = _useState6[1];\n\n  var fileChangeHandler = function fileChangeHandler(e) {\n    setImage(e.target.files[0]);\n  };\n\n  var saveImageIntoDb = function saveImageIntoDb(url) {\n    var db = getDatabase();\n    var newKey = push(rtref(db, 'images/'), {\n      url: url\n    }).key;\n    return newKey;\n  };\n\n  var fileUploadHandler = function fileUploadHandler() {\n    if (image === null) {\n      return;\n    }\n\n    var storageRef = ref(storage, \"/images/\".concat(image.name));\n    var uploadTask = uploadBytesResumable(storageRef, image);\n    uploadTask.on('state_changed', function (snapshot) {}, function (err) {\n      console.log(err);\n    }, function () {\n      getDownloadURL(uploadTask.snapshot.ref).then(function (url) {\n        setImageUrl(url);\n        var newKey = saveImageIntoDb(url);\n        console.log('new key', newKey);\n        setImageKey(newKey);\n      });\n    });\n  };\n\n  var reload = function reload() {\n    window.location.replace('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.app,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload some image to annotate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: fileChangeHandler,\n        className: classes.chooseFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: fileUploadHandler,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), imageUrl !== null && /*#__PURE__*/_jsxDEV(Canvas, {\n        imageUrl: imageUrl,\n        imageKey: imageKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }, this), imageUrl !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reload,\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Images, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Sk5jchcHLungvqt8+/atLf2DLZ4=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nhi/images/src/App.js"],"names":["Canvas","Images","classes","React","useState","storage","getDownloadURL","uploadBytesResumable","ref","getDatabase","rtref","push","App","image","setImage","imageUrl","setImageUrl","imageKey","setImageKey","fileChangeHandler","e","target","files","saveImageIntoDb","url","db","newKey","key","fileUploadHandler","storageRef","name","uploadTask","on","snapshot","err","console","log","then","reload","window","location","replace","app","chooseFile"],"mappings":"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","sourcesContent":["import Canvas from \"./components/Canvas\";\nimport Images from \"./components/Images\";\nimport classes from './App.module.css';\nimport React, { useState } from 'react';\nimport { storage } from './firebase/firebase';\nimport { getDownloadURL, uploadBytesResumable, ref } from \"firebase/storage\";\nimport { getDatabase, ref as rtref, push } from \"firebase/database\";\n\nfunction App() {\n\n  const [image, setImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [imageKey, setImageKey] = useState(null);\n\n  const fileChangeHandler = (e) => {\n    setImage(e.target.files[0])\n  }\n\n  const saveImageIntoDb = (url) => {\n    const db = getDatabase();\n    const newKey = push(rtref(db, 'images/' ), {\n      url : url\n    }).key;\n    return newKey;\n  };\n\n const fileUploadHandler = () => {\n    if (image === null) {\n      return\n    }\n   \n    const storageRef = ref(storage, `/images/${image.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, image);\n    uploadTask.on('state_changed', (snapshot) => {},\n    (err) => {console.log(err)},\n    () => {\n      getDownloadURL(uploadTask.snapshot.ref)\n      .then(url => {\n        setImageUrl(url);\n        const newKey = saveImageIntoDb(url);\n        console.log('new key', newKey)\n        setImageKey(newKey);\n      })\n    }\n )};\n\n const reload = () => {\n   window.location.replace('/')\n }\n\n\n  return(\n    <React.Fragment>\n      <div className={classes.app}>\n        <h3>Upload some image to annotate</h3>\n        <input type=\"file\" onChange={fileChangeHandler} className={classes.chooseFile}/>\n        <button type=\"button\" onClick={fileUploadHandler}>Upload</button>\n        {imageUrl !== null && <Canvas imageUrl={imageUrl} imageKey={imageKey}/>}\n        {imageUrl !== null && <button onClick={reload}>Finish</button>}\n      </div>\n      <Images/>\n    </React.Fragment>\n  )\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}