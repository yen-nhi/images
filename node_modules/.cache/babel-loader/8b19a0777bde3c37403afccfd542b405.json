{"ast":null,"code":"import _toConsumableArray from \"/home/nhi/react Images/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/home/nhi/react Images/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/nhi/react Images/src/components/Canvas.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport classes from './Canvas.module.css';\nimport React, { useRef, useEffect, useState } from 'react';\nimport BoxForm from \"./BoxForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Canvas = function Canvas(props) {\n  _s();\n\n  console.log('canvas', props.imageUrl);\n  var canvas = useRef();\n  var currentBox = null;\n  var image = new Image();\n  image.src = props.imageUrl;\n  image.width = '700px';\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      boxes = _useState2[0],\n      setBoxes = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newDraw = _useState4[0],\n      _setNewDraw = _useState4[1];\n\n  var _useState5 = useState({\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      coordinate = _useState6[0],\n      setCoordinate = _useState6[1];\n\n  var drawBox = function drawBox(ctx, box) {\n    console.log(box.coor);\n    var _box$coor = box.coor,\n        x = _box$coor.x,\n        y = _box$coor.y,\n        w = _box$coor.w,\n        h = _box$coor.h;\n    ctx.beginPath();\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 1;\n    ctx.rect(x, y, w, h);\n    ctx.stroke();\n    ctx.fillText(box.desc, x, y - 5);\n  };\n\n  var drawBoxes = function drawBoxes() {\n    var canvasEle = canvas.current;\n    canvasEle.width = canvasEle.clientWidth;\n    canvasEle.height = canvasEle.clientHeight;\n    var ctx = canvasEle.getContext(\"2d\");\n\n    if (ctx !== null) {\n      ctx.clearRect(0, 0, canvas.current.clientWidth, canvas.current.clientHeight);\n      ctx.drawImage(image, 0, 0);\n      boxes.map(function (box) {\n        return drawBox(ctx, box);\n      });\n\n      if (currentBox !== null) {\n        drawBox(ctx, currentBox.coor);\n      }\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(e) {\n    var x = parseInt(e.nativeEvent.offsetX - canvas.current.clientLeft);\n    var y = parseInt(e.nativeEvent.offsetY - canvas.current.clientTop);\n    currentBox = {\n      coor: {\n        x: x,\n        y: y,\n        w: 0,\n        h: 0\n      },\n      desc: ''\n    }; // currentBox = {x, y, w: 0, h: 0};\n  };\n\n  var handleMouseUp = function handleMouseUp(e) {\n    if (currentBox !== null && currentBox.w !== 0 && currentBox.h !== 0) {\n      setBoxes([].concat(_toConsumableArray(boxes), [currentBox]));\n      setCoordinate(currentBox.coor);\n\n      _setNewDraw(true);\n\n      drawBoxes();\n    }\n\n    currentBox = null;\n  };\n\n  var handleMouseOut = function handleMouseOut(e) {\n    currentBox = null;\n    drawBoxes();\n  };\n\n  var handleMouseMove = function handleMouseMove(e) {\n    if (currentBox !== null) {\n      var _currentBox$coor = currentBox.coor,\n          x = _currentBox$coor.x,\n          y = _currentBox$coor.y,\n          w = _currentBox$coor.w,\n          h = _currentBox$coor.h;\n      var mouseX = parseInt(e.nativeEvent.offsetX - canvas.current.clientLeft);\n      var mouseY = parseInt(e.nativeEvent.offsetY - canvas.current.clientTop);\n      currentBox.coor = {\n        x: x,\n        y: y,\n        w: mouseX - x,\n        h: mouseY - y\n      };\n      drawBoxes();\n    }\n  }; // initialize the canvas context\n\n\n  useEffect(function () {// dynamically assign the width and height to canvas\n  }, []);\n  useEffect(function () {\n    drawBoxes();\n  }, [boxes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.page,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseOut: handleMouseOut,\n      onMouseMove: handleMouseMove,\n      ref: canvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, _this), newDraw && /*#__PURE__*/_jsxDEV(BoxForm, {\n      setNewDraw: function setNewDraw() {\n        return _setNewDraw(false);\n      },\n      coordinate: coordinate,\n      url: props.imageUrl,\n      id: props.imageKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(Canvas, \"2AuxjUC4eZ/vOpQmYwg4Ei4Y9Us=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/home/nhi/react Images/src/components/Canvas.js"],"names":["classes","React","useRef","useEffect","useState","BoxForm","Canvas","props","console","log","imageUrl","canvas","currentBox","image","Image","src","width","boxes","setBoxes","newDraw","setNewDraw","x","y","w","h","coordinate","setCoordinate","drawBox","ctx","box","coor","beginPath","strokeStyle","lineWidth","rect","stroke","fillText","desc","drawBoxes","canvasEle","current","clientWidth","height","clientHeight","getContext","clearRect","drawImage","map","handleMouseDown","e","parseInt","nativeEvent","offsetX","clientLeft","offsetY","clientTop","handleMouseUp","handleMouseOut","handleMouseMove","mouseX","mouseY","page","imageKey"],"mappings":"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","sourcesContent":["import classes from './Canvas.module.css';\nimport React, { useRef, useEffect, useState } from 'react';\nimport BoxForm from \"./BoxForm\";\n\nconst Canvas = (props) => {\n  console.log('canvas', props.imageUrl);\n  const canvas = useRef();\n  let currentBox =  null; \n  let image = new Image();\n  image.src = props.imageUrl;\n  image.width = '700px';\n  const [boxes, setBoxes] = useState([]);\n  const [newDraw, setNewDraw] = useState(false);\n  const [coordinate, setCoordinate] = useState({x: 0, y: 0, w: 0, h: 0});\n  \n  const drawBox = (ctx, box) => {\n    console.log(box.coor);  \n    const { x, y, w, h } = box.coor;\n    \n    ctx.beginPath();\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 1;\n    ctx.rect(x, y, w, h);\n    ctx.stroke();\n    ctx.fillText(box.desc, x, y - 5);\n  }\n\n  const drawBoxes = () => {\n    const canvasEle = canvas.current;\n    canvasEle.width = canvasEle.clientWidth;\n    canvasEle.height = canvasEle.clientHeight;\n    let ctx = canvasEle.getContext(\"2d\");\n\n    if (ctx !== null) {\n      ctx.clearRect(0, 0, canvas.current.clientWidth, canvas.current.clientHeight);  \n      ctx.drawImage(image, 0, 0);\n      boxes.map(box => drawBox(ctx, box));\n      if (currentBox !== null) {\n        drawBox(ctx, currentBox.coor);\n      }     \n    }\n  }\n\n  const handleMouseDown = e => {\n    const x = parseInt(e.nativeEvent.offsetX - canvas.current.clientLeft);\n    const y = parseInt(e.nativeEvent.offsetY - canvas.current.clientTop);\n    currentBox = {coor: {x, y, w: 0, h: 0}, desc: ''};\n    // currentBox = {x, y, w: 0, h: 0};\n  }  \n\n  const handleMouseUp = e => {\n    if (currentBox !== null && currentBox.w !== 0 && currentBox.h !== 0) {\n      setBoxes([...boxes, currentBox]);\n      setCoordinate(currentBox.coor);\n      setNewDraw(true);\n      drawBoxes();\n    } \n    currentBox = null;\n  }  \n\n  const handleMouseOut = e => {\n    currentBox = null\n    drawBoxes();\n  }\n\n  const handleMouseMove = e => {\n    if (currentBox !== null) {\n      const { x, y, w, h } = currentBox.coor;\n      const mouseX = parseInt(e.nativeEvent.offsetX - canvas.current.clientLeft);\n      const mouseY = parseInt(e.nativeEvent.offsetY - canvas.current.clientTop);\n      currentBox.coor = {x, y, w: mouseX - x, h: mouseY - y};\n      drawBoxes();\n    }\n  }\n\n\n  // initialize the canvas context\n  useEffect(() => {\n    // dynamically assign the width and height to canvas\n  }, []);\n\n  useEffect(() => {   \n    drawBoxes();\n  }, [boxes]);\n\n  return (\n      <div className={classes.page}>\n        <canvas \n          onMouseDown={handleMouseDown} \n          onMouseUp={handleMouseUp}\n          onMouseOut={handleMouseOut}\n          onMouseMove={handleMouseMove}\n          ref={canvas}>    \n        </canvas>\n        {newDraw && <BoxForm \n          setNewDraw={() => setNewDraw(false)}\n          coordinate={coordinate}\n          url={props.imageUrl}\n          id={props.imageKey}\n          />}\n      </div>\n      );\n}\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}